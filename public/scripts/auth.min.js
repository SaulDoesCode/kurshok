import app from"/js/site.min.js";const d=app.d,df=d.domfn,authLauncher=d.query(".auth-launcher")||df.div.auth_launcher({$:"body"},"Auth"),{authView:authView,usernameInput:usernameInput,emailInput:emailInput,authBtn:authBtn}=d.h`
<section class="auth-view" ref="authView">
  <div>
    <div class="auth-form-field">
      <label for="auth-username">Username</label>
      <input type="text" name="username" id="auth-username" ref="usernameInput">
      <label for="auth-email">Email</label>
      <input type="text" name="email" id="auth-email" ref="emailInput">
    </div>
    <button class="submit" ref="authBtn">authenticate</button>
  </div>
</section>`.collect();app.authViewToggle=app.setupToggleSituation(authLauncher,app.authView=authView,"body",{background:!0});const authMsg=df.div({class:"auth-msg"}),showAuthMsg=(t,e)=>{df.attrToggle(authBtn,"hidden",!0),authMsg.textContent=t,authView.contains(authMsg)||authView.append(authMsg),e&&df.remove(authMsg,e).then((()=>{df.attrToggle(authBtn,"hidden",void 0),authView.append(authBtn)}))};app.authenticate=async(t=usernameInput.value.trim(),e=emailInput.value.trim())=>{if(""==t)throw""!=e&&e.includes("@")?showAuthMsg("username is invalid",4500):showAuthMsg("username & email are invalid",4500),new Error("username is invalid");if(""==e||!e.includes("@"))throw showAuthMsg("email is invalid",4500),new Error("email is invalid");showAuthMsg("attempting authentication...");const a=await app.jsonPost("/auth",{username:t,email:e}),i=await a.json();if(console.log(i),i.ok)return app.toast.msg("auth email is sending: "+i.status),showAuthMsg("auth email is sending: "+i.status),showAuthMsg("auth email status: "+await app.check_email_status()),await app.try_auth_verify(),!0;throw app.toast.error("auth failed: "+i.status),showAuthMsg("auth failed: "+i.status,5e3),new Error("authentication failed: "+i.status)},app.check_email_status=()=>new Promise(((t,e)=>{let a=!0;const i=setTimeout((()=>{a=!1,clearInterval(ti),e()}),6e5);let s=setTimeout((async function u(){if(!a)return clearTimeout(i),clearTimeout(s),void e();const o=await(await fetch("/auth/email-status")).json();if(o.ok)app.toast.msg("Auth Email: "+o.status),clearTimeout(s),clearTimeout(i),t(o.status);else{if(console.log(o),o.status.includes("failed to send")||o.status.includes("Failed to read preauth token")||o.status.includes("preauth cookie"))return clearTimeout(s),clearTimeout(i),e();s=setTimeout(u,1500)}}),1500)})),app.try_auth_verify=()=>new Promise(((t,e)=>{let a=!0;const i=setTimeout((()=>{a=!1,clearTimeout(s),e()}),6e5);let s=setTimeout((async function u(){if(!a)return clearTimeout(s),clearTimeout(i),void e();const o=await(await fetch("/auth/verification")).json();o.ok?(app.toast.msg("Auth: "+o.status),clearTimeout(s),clearTimeout(i),t(),setTimeout((()=>{window.location.reload()}),3e3)):(console.log(o),o.status.includes("expire")&&o.status.includes("preauth")&&(setTimeout((()=>{window.location.reload()}),"localhost"==window.location.hostname?4500:800),clearTimeout(s),clearTimeout(i),e()),s=setTimeout(u,1500))}),3e3)}));const authClickHandle=d.once.click(authBtn,(async t=>{try{await app.authenticate()}catch(t){console.error(t),authClickHandle.on()}}));let mlSuccess=localStorage.getItem("ml-success");window.addEventListener("storage",(()=>{mlSuccess!==localStorage.getItem("ml-success")&&(localStorage.removeItem("ml-success"),"localhost"==window.location.hostname?document.body.innerHTML="<h1>Yeah, auth worked and all that.</h1>":window.close())})),"/"===window.location.pathname&&app.authViewToggle.toggleView();
//# sourceMappingURL=auth.min.js.map