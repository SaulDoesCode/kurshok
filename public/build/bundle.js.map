{"version":3,"file":"bundle.js","sources":["../../src/domlib.js","../../src/main.js"],"sourcesContent":["export default (d => {\r\n  d.isArr = Array.isArray\r\n\r\n  d.isNil = o => o == null\r\n\r\n  d.isDef = o => o != null\r\n\r\n  d.isFunc = o => o instanceof Function\r\n\r\n  d.isBool = o => typeof o === 'boolean'\r\n\r\n  d.isObj = o => o != null && o.constructor === Object\r\n\r\n  d.isStr = o => typeof o === 'string'\r\n\r\n  d.isNum = o => typeof o === 'number' && !isNaN(o)\r\n\r\n  d.isInt = o => d.isNum(o) && o % 1 === 0\r\n\r\n  d.isArrlike = o => o != null && (d.isArr(o) || (!(o instanceof Function || o instanceof Node) && o.length % 1 === 0))\r\n\r\n  d.isNode = o => o instanceof Node\r\n\r\n  d.isNodeList = (o, arr = true) => o instanceof NodeList || (arr && d.allare(o, d.isNode))\r\n\r\n  d.isPrimitive = o => (o = typeof o, o === 'string' || o === 'number' || o === 'boolean')\r\n\r\n  d.isEl = o => o instanceof Element\r\n\r\n  d.isPromise = o => typeof o === 'object' && d.isFunc(o.then)\r\n\r\n  d.isRegExp = o => o instanceof RegExp\r\n\r\n  d.isEmpty = o => d.isNil(o) || !((d.isObj(o) ? Object.keys(o) : o).length || o.size)\r\n\r\n  d.isMounted = (child, parent = document) => d.isNodeList(child) ? Array.from(child).every(n => d.isMounted(n)) : parent === child || !!(parent.compareDocumentPosition(child) & 16)\r\n\r\n  d.isSvg = o => o instanceof SVGElement\r\n\r\n  d.isInput = (o, contentEditable) => o instanceof HTMLInputElement || o instanceof HTMLTextAreaElement || (\r\n    !!contentEditable && o instanceof Element && o.getAttribute('contenteditable') === 'true'\r\n  )\r\n\r\n  d.isRenderable = o => o instanceof Node || d.isPrimitive(o) || d.allare(o, d.isRenderable)\r\n\r\n  /*\r\n   * allare checks whether all items in an array are like a given param\r\n   * it's similar to array.includes but allows functions\r\n   */\r\n  d.allare = (arr, like) => {\r\n    if (!d.isArrlike(arr)) return false\r\n    const isfn = like instanceof Function\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!(isfn ? like(arr[i]) : arr[i] === like)) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  /*\r\n   * compose a typical function composition functions\r\n   * @ example compose(x => x + 1, x => x + 1)(1) === 3\r\n   */\r\n  d.compose = (...fns) => fns.reduce((a, b) => (...args) => a(b(...args)))\r\n\r\n  /*\r\n   * curry a function\r\n   * and optionally\r\n   * set the arity or pre bound arguments\r\n   */\r\n  d.curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : d.curry.bind(null, fn, arity, ...args)\r\n\r\n  d.assign = Object.assign\r\n\r\n  d.clone = (host, empty) => d.assign(empty ? Object.create(null) : {}, host)\r\n\r\n  /*\r\n   * flatten recursively spreads out nested arrays\r\n   * to make the entire array one dimentional\r\n   * @example flatten([1, [2, [3]], 4, [5]]) -> [1, 2, 3, 4, 5]\r\n   * @example flatten(x) -> [x]\r\n   */\r\n  d.flatten = (arr, result = [], encaptulate = true) => {\r\n    if (encaptulate && !d.isArr(arr)) return [arr]\r\n    for (let i = 0; i < arr.length; i++)\r\n      d.isArr(arr[i]) ? d.flatten(arr[i], result) : d.result.push(arr[i])\r\n    return result\r\n  }\r\n\r\n  /*\r\n   * runAsync runs a function asynchronously\r\n   */\r\n  d.runAsync = window.requestIdleCallback ? (fn, ...args) => window.requestIdleCallback(fn.bind(undefined, ...args)) : (fn, ...args) => setTimeout(fn, 0, ...args)\r\n\r\n  /*\r\n   * run runs a function on DOMContentLoaded or asynchronously\r\n   * if document.body is present and loaded\r\n   */\r\n  d.run = function () {\r\n    document.body || document.readyState === 'complete' ?\r\n      d.runAsync.apply(undefined, arguments) :\r\n      window.addEventListener('DOMContentLoaded', e => {\r\n        d.runAsync.apply(undefined, arguments)\r\n      }, {once: true})\r\n  }\r\n\r\n  d.html = (input, ...args) => {\r\n    if (args.length > 2) return d.h(input, ...args)\r\n    if (input instanceof Function) input = input(...args)\r\n    if (input instanceof Promise) return new Promise(resolve => {\r\n      input.then(i => resolve(d.html(i, ...args)))\r\n    })\r\n    if (input instanceof Node) return input\r\n    if (d.isNum(input)) input = String(input)\r\n    if (typeof input === 'string') return Array.from(document.createRange().createContextualFragment(input).childNodes)\r\n    if (d.isArr(input)) return input.map(i => d.html(i, ...args))\r\n    throw new Error('.html: unrenderable input')\r\n  }\r\n\r\n  d.frag = inner => inner != null ? d.html(inner) : document.createDocumentFragment()\r\n\r\n  /*\r\n   * DOM Query Selector Functions\r\n   */\r\n  d.query = (selector, host = document) => d.isNode(selector) ? selector : d.query(host).querySelector(selector)\r\n\r\n  d.queryAsync = (selector, host) => new Promise((resolve, reject) => {\r\n    const find = () => {\r\n      const result = d.query(selector, host)\r\n      result == null ?\r\n        reject(new Error(\"queryAsync: couldn't find \" + selector)) :\r\n        resolve(result)\r\n    }\r\n    document.body ? find() : d.run(find)\r\n  })\r\n\r\n  /*\r\n   *  queryAll(selector String|Node, host = document String|Node)\r\n   *  it returns an array of elements matching a selector,\r\n   *  a nicer querySelectorAll essentially.\r\n   */\r\n  d.queryAll = (selector, host = document) => Array.from(d.query(host).querySelectorAll(selector))\r\n\r\n  d.queryEach = (selector, fn, host = document) => {\r\n    if (!d.isFunc(fn))[fn, host] = [host, document]\r\n    return d.each(d.queryAll(selector, host), fn)\r\n  }\r\n\r\n  /*\r\n   * each iterates over arrays, objects, integers,\r\n   * and anything implementing .forEach\r\n   */\r\n  d.each = (iterable, fn) => {\r\n    if (iterable != null) {\r\n      if (d.isObj(iterable)) {\r\n        for (const key in iterable) fn(iterable[key], key, iterable)\r\n      } else if (iterable.length) {\r\n        const len = iterable.length\r\n        let i = 0\r\n        while (i !== len) fn(iterable[i], i++, iterable)\r\n      } else if (iterable.forEach) {\r\n        iterable.forEach(fn)\r\n      } else if (d.isInt(iterable)) {\r\n        let i = 0\r\n        while (i < iterable) fn(i++, iterable)\r\n      }\r\n    }\r\n    return iterable\r\n  }\r\n\r\n  /*\r\n   * infinify takes a function that has a string (like an event type or key)\r\n   * and returns a proxy which binds the key of any get operation\r\n   * as that initial string argument enabling a very natural feeling API\r\n   * @scope infinify(func) -> Proxy<func>\r\n   * @example const emit = infinify(emitFN); emit.anyEvent(details)\r\n   */\r\n  d.infinify = (fn, reflect) => new Proxy(fn, {\r\n    get: reflect === true ?\r\n      (fn, key) => key in fn ? Reflect.get(fn, key) : fn.bind(null, key) : (fn, key) => fn.bind(null, key)\r\n  })\r\n\r\n  d.copyprop = (host, obj, key) => (Object.defineProperty(host, key, Object.getOwnPropertyDescriptor(obj, key)), host)\r\n\r\n  /*\r\n   * merge(host Object|Array, target Object|Array)\r\n   * merge objects together deeply.\r\n   * it copies prop descriptions instead of raw values.\r\n   */\r\n  d.merge = (host, target) => {\r\n    if (d.isArr(host) && d.isArr(target)) {\r\n      for (const val of target)\r\n        if (!host.includes(val)) host.push(val)\r\n    } else if (d.merge.able(host) && d.merge.able(target)) {\r\n      for (const key in target) {\r\n        if (key in host) {\r\n          const old = host[key]\r\n          const val = target[key]\r\n          if (d.merge.able(old) && d.merge.able(val)) {\r\n            d.merge(old, val)\r\n          } else if (val != null) {\r\n            d.copyprop(host, target, key)\r\n          }\r\n        } else {\r\n          d.copyprop(host, target, key)\r\n        }\r\n      }\r\n    }\r\n    return host\r\n  }\r\n\r\n  d.merge.able = o => d.isArr(o) || (o != null && typeof o === 'object' && !d.isFunc(o.then))\r\n\r\n  d.emitter = (host = Object.create(null), listeners = new Map()) => Object.assign(host, {\r\n    emit: d.infinify((event, ...data) => d.runAsync(() => {\r\n      if (listeners.has(event))\r\n        for (const h of listeners.get(event)) h.apply(null, data)\r\n    })),\r\n    on: d.infinify((event, handler) => {\r\n      if (!listeners.has(event)) listeners.set(event, new Set())\r\n      listeners.get(event).add(handler)\r\n      const manager = () => host.off(event, handler)\r\n      manager.off = manager\r\n      manager.on = () => (manager(), host.on(event, handler))\r\n      manager.once = () => (manager(), host.once(event, handler))\r\n      return manager\r\n    }),\r\n    once: d.infinify((event, handler) => host.on(event, function h() {\r\n      handler(...arguments)\r\n      host.off(event, h)\r\n    })),\r\n    off: d.infinify((event, handler) => {\r\n      if (listeners.has(event)) {\r\n        const ls = listeners.get(event)\r\n        ls.delete(handler)\r\n        if (!ls.size || handler == null) listeners.delete(event)\r\n      }\r\n    }),\r\n    clear: () => (listeners.clear(), host)\r\n  })\r\n\r\n  const listen = function (once, target, type, fn, options = false) {\r\n    if (d.isStr(target)) target = d.queryAll(target)\r\n    if ((d.isArr(target) || target instanceof NodeList) && target.length === 1) {\r\n      target = target[0]\r\n    }\r\n    if (!target || (d.isArr(target) && !target.length) || !target.addEventListener) {\r\n      throw new Error('nil/empty event target(s)')\r\n    }\r\n\r\n    let typeobj = d.isObj(type)\r\n    if (type == null || !(typeobj || d.isStr(type))) {\r\n      throw new TypeError('cannot listen to nil or invalid event type')\r\n    }\r\n\r\n    if (d.isArr(target)) {\r\n      for (let i = 0; i < target.length; i++) {\r\n        target[i] = listen(once, target[i], typeobj ? d.clone(type) : type, fn, options)\r\n      }\r\n      target.off = () => {\r\n        for (const h of target) h()\r\n        return target\r\n      }\r\n      target.on = mode => {\r\n        for (const h of target) h.on(mode)\r\n        return target\r\n      }\r\n      return target\r\n    }\r\n\r\n    if (typeobj) {\r\n      for (const name in type) {\r\n        type[name] = listen(once, target, name, type[name], options)\r\n      }\r\n      target.off = () => {\r\n        for (const h of Object.values(type)) h()\r\n        return target\r\n      }\r\n      target.on = mode => {\r\n        for (const h of Object.values(type)) h.on(mode)\r\n        return target\r\n      }\r\n      return type\r\n    }\r\n\r\n    let wrapper\r\n    if (typeof fn === 'string' && options instanceof Function) {\r\n      let matcher = fn\r\n      fn = options\r\n      options = arguments[5]\r\n      if (options == null) options = false\r\n      wrapper = function (event) {\r\n        if (\r\n          event.target != null &&\r\n          event.target !== this &&\r\n          event.target.matches(matcher)\r\n        ) {\r\n          fn.call(this, event, target)\r\n          if (off.once) off()\r\n        }\r\n      }\r\n    } else {\r\n      wrapper = function (event) {\r\n        fn.call(this, event, target)\r\n        if (off.once) off()\r\n      }\r\n    }\r\n\r\n    const on = mode => {\r\n      if (mode != null && mode !== off.once) off.once = !!mode\r\n      target.addEventListener(type, wrapper, options)\r\n      off.ison = true\r\n      return off\r\n    }\r\n\r\n    const off = d.assign(() => {\r\n      target.removeEventListener(type, wrapper)\r\n      off.ison = false\r\n      return off\r\n    }, {\r\n      target,\r\n      on,\r\n      once\r\n    })\r\n    off.off = off\r\n\r\n    return on()\r\n  }\r\n\r\n  const infinifyListen = {\r\n    get: (ln, type) => (tgt, fn, opts) => ln(tgt, type, fn, opts)\r\n  }\r\n\r\n  d.on = new Proxy(listen.bind(null, false), infinifyListen)\r\n  d.once = new Proxy(listen.bind(null, true), infinifyListen)\r\n  d.EventManager = d.curry(listen, 3)\r\n\r\n  // vpend - virtual append, add nodes and append them as a document fragment\r\n  d.vpend = (\r\n    children,\r\n    host,\r\n    connector = 'appendChild',\r\n    dfrag = d.frag(),\r\n    noHostAppend\r\n  ) => {\r\n    for (let i = 0; i < children.length; i++) {\r\n      let child = children[i]\r\n      if (child instanceof Function) {\r\n        if ((child = child(host)) === host) continue\r\n        else if (child instanceof Function) {\r\n          let lvl = 0\r\n          let ishost = false\r\n          let lastchild\r\n          while (child instanceof Function && lvl < 25) {\r\n            lastchild = child\r\n            child = child()\r\n            if ((ishost = child === host) || lastchild === child) break\r\n            lvl++\r\n          }\r\n          if (ishost) continue\r\n        }\r\n      }\r\n\r\n      if (child == null) continue\r\n      const ctr = child.constructor\r\n      if (ctr === String || ctr === Number) {\r\n        if (!child.length) continue\r\n        child = new Text(child)\r\n      } else if (d.isArr(child)) {\r\n        child = d.vpend(child, host, connector, dfrag, true)\r\n      }\r\n\r\n      if (child instanceof Node) {\r\n        dfrag.appendChild(child)\r\n        children[i] = child\r\n      }\r\n    }\r\n    if (host && !noHostAppend) d.run(() => host[connector](dfrag))\r\n    return children\r\n  }\r\n\r\n  /*\r\n   * prime takes an array of renderable entities\r\n   * and turns them into just nodes and functions\r\n   * (to be unwrapped/degloved later rather than sooner [by vpend])\r\n   */\r\n  d.prime = (...nodes) => {\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      let n = nodes[i]\r\n      const ntype = typeof n\r\n      if (n == null || ntype === 'boolean') {\r\n        nodes.splice(i, 1)\r\n        continue\r\n      }\r\n      if (n instanceof Node || n instanceof Function) {\r\n        continue\r\n      } else if (ntype === 'string' || ntype === 'number') {\r\n        const nextI = i + 1\r\n        if (nextI < nodes.length) {\r\n          const next = nodes[nextI]\r\n          const nexttype = typeof next\r\n          if (nexttype === 'string' || nexttype === 'number') {\r\n            nodes[i] = String(n) + String(next)\r\n            nodes.splice(nextI, 1)\r\n            i--\r\n          }\r\n        } else {\r\n          nodes[i] = new Text(String(n))\r\n        }\r\n        continue\r\n      }\r\n\r\n      const isnl = n instanceof NodeList\r\n      if (isnl) {\r\n        if (n.length < 2) {\r\n          nodes[i] = n[0]\r\n          continue\r\n        }\r\n        n = Array.from(n)\r\n      } else if (n.constructor === Object) {\r\n        n = Object.values(n)\r\n      }\r\n\r\n      if (d.isArr(n)) {\r\n        if (!isnl) {\r\n          n = d.prime.apply(null, n)\r\n          if (n.length < 2) {\r\n            nodes[i] = n[0]\r\n            i--\r\n            continue\r\n          }\r\n        }\r\n        nodes.splice(i, 1, ...n)\r\n        i--\r\n      } else if (n != null) {\r\n        throw new Error(`illegal renderable: ${n}`)\r\n      }\r\n    }\r\n    return nodes\r\n  }\r\n\r\n  /*\r\n   * attach renderables to a host node via a connector\r\n   * like append, prepend, before, after\r\n   * independant of load state\r\n   */\r\n  d.attach = (host, connector, ...renderables) => {\r\n    if (host instanceof Function) host = host()\r\n    if (renderables.length === 1 && d.isArr(renderables[0])) renderables = renderables[0]\r\n    const nodeHost = host instanceof Node\r\n    renderables = d.prime(renderables)\r\n    if (nodeHost)\r\n      d.vpend(renderables, host, connector)\r\n    else if (typeof host === 'string')\r\n      return d.queryAsync(host).then(h => d.attach(h, connector, ...renderables))\r\n    if (d.isArr(host)) host.push(...renderables)\r\n    return renderables.length === 1 ? renderables[0] : renderables\r\n  }\r\n\r\n  /*\r\n   * render attaches one node to another\r\n   */\r\n  d.render = (node, host = document.body || 'body', connector = 'appendChild') => d.attach(host, connector, node)\r\n\r\n  const infinifyDOM = (gen, tag) => tag in gen ? Reflect.get(gen, tag) :\r\n    (gen[tag] = new Proxy(gen.bind(null, tag), {\r\n      get(fn, classes) {\r\n        classes = classes.replace(/_/g, '-').split('.')\r\n        return new Proxy(function () {\r\n          const el = fn.apply(null, arguments)\r\n          el.classList.add(...classes)\r\n          return el\r\n        }, {\r\n          get(_, anotherClass, proxy) {\r\n            classes.push(...anotherClass.replace(/_/g, '-').split('.'))\r\n            return proxy\r\n          }\r\n        })\r\n      }\r\n    }))\r\n\r\n  d.actualDF = {}\r\n  const domfn = new Proxy(d, {\r\n    get: (d, key) => d.actualDF[key] || infinifyDOM(d, key),\r\n    set: (d, key, val) => Reflect.set(d.actualDF, key, val)\r\n  })\r\n  \r\n\r\n  domfn.css = (node, styles, prop) => {\r\n    if (styles == null) {\r\n      if (document.defaultView) {\r\n        return document.defaultView.getComputedStyle(node)\r\n      }\r\n    } else if (styles.constructor === Object) {\r\n      for (const key in styles) domfn.css(node, key, styles[key])\r\n    } else if (typeof styles === 'string') {\r\n      if (prop == null) {\r\n        if (styles && styles[0] === '-') return node.getPropertyValue(styles)\r\n        if (document.defaultView) {\r\n          const style = document.defaultView.getComputedStyle(node)\r\n          if (style) return styles ? style[styles] : style\r\n        }\r\n      } else if (styles[0] === '-') {\r\n        node.style.setProperty(styles, prop)\r\n      } else {\r\n        node.style[styles] = prop\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  domfn.class = (node, c, state) => {\r\n    if (node && c != null && node.classList) {\r\n      if (d.isArr(node)) {\r\n        for (const n of node) domfn.class(n, c, state)\r\n      } else if (c.constructor === Object) {\r\n        for (const name in c) {\r\n          if (c[name] === true) node.classList.add(name)\r\n          else if (c[name] === false) node.classList.remove(name)\r\n          else for (const cl of c) node.classList.toggle(name)\r\n        }\r\n      } else {\r\n        if (typeof c === 'string') c = c.split(' ')\r\n        for (const cl of c) {\r\n          if (state === true) node.classList.add(cl)\r\n          else if (state === false) node.classList.remove(cl)\r\n          else node.classList.toggle(cl)\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  domfn.hasClass = (node, name) => node.classList.contains(name)\r\n\r\n  domfn.attr = (node, attr, val) => {\r\n    if (attr.constructor === Object) {\r\n      for (const a in attr) {\r\n        const present = attr[a] == null\r\n        node[present ? 'removeAttribute' : 'setAttribute'](a, attr[a])\r\n      }\r\n    } else if (typeof attr === 'string') {\r\n      const old = node.getAttribute(attr)\r\n      if (val != null) {\r\n        node.setAttribute(attr, val)\r\n      }\r\n      return old\r\n    }\r\n    return node\r\n  }\r\n\r\n  domfn.removeAttribute = (node, ...attrs) => {\r\n    if (attrs.length === 1) node.removeAttribute(attrs[0])\r\n    else for (let i = 0; i < attrs.length; i++) {\r\n      if (d.isArr(attrs[i])) {\r\n        attrs.splice(i, 1, ...attrs[i])\r\n        i--\r\n      }\r\n      node.removeAttribute(attrs[i])\r\n    }\r\n    return node\r\n  }\r\n\r\n  domfn.attrToggle = (\r\n    node,\r\n    name,\r\n    state = !node.hasAttribute(name),\r\n    val = node.getAttribute(name) || ''\r\n  ) => {\r\n    if (state) {\r\n      node.setAttribute(name, val)\r\n    } else {\r\n      node.removeAttribute(name)\r\n    }\r\n    return node\r\n  }\r\n\r\n  domfn.emit = (node, type, detail) => (node.dispatchEvent(type instanceof String ? new CustomEvent(type, {detail}) : type), node)\r\n  domfn.append = (node, ...children) => (d.attach(node, 'appendChild', ...children), node)\r\n  domfn.prepend = (node, ...children) => (d.attach(node, 'prepend', ...children), node)\r\n  domfn.appendTo = (node, host) => (d.attach(node, 'appendChild', host), node)\r\n  domfn.prependTo = (node, host) => (d.attach(node, 'prepend', host), node),\r\n  domfn.clear = node => (node[d.isInput(node) ? 'value' : 'textContent'] = '', node)\r\n\r\n  domfn.refurbish = node => {\r\n    node.removeAttribute('class')\r\n    for (const {name} of node.attributes) node.removeAttribute(name)\r\n    return domfn.clear(node)\r\n  }\r\n\r\n  domfn.remove = (node, after) => {\r\n    if (node instanceof Function) node = node()\r\n    if (typeof node === 'string') node = document.querySelector(node)\r\n    if (d.isArr(node))\r\n      for (const n of node) domfn.remove(n, after)\r\n    else if (d.isNum(after)) {\r\n      return new Promise(res => setTimeout(() => res(domfn.remove(node)), after))\r\n    } else if (d.isMounted(node)) d.run(() => node.remove())\r\n    else if (d.isNodeList(node))\r\n      for (let i = 0; i < node.length; i++) domfn.remove(node[i])\r\n    return node\r\n  }\r\n\r\n  domfn.replace = (node, newnode) => {\r\n    if (newnode instanceof Function) newnode = newnode()\r\n    d.run(() => node.replaceWith(newnode))\r\n    return newnode\r\n  }\r\n\r\n  domfn.find = d.queryAll\r\n  domfn.findOne = d.query\r\n  \r\n  domfn.empty = domfn.clear\r\n  d.domfn = domfn\r\n\r\n  d.txt = str => new Text(str)\r\n\r\n  d.assimilate = Object.assign((el, {props, methods}) => {\r\n    if (props) d.assimilate.props(el, props)\r\n    if (methods) d.assimilate.methods(el, methods)\r\n  }, {\r\n    props(el, props) {\r\n      for (const prop in props) {\r\n        let val = props[prop]\r\n        if (prop in el) {\r\n          el[prop] = val\r\n        } else if (prop === 'accessors') {\r\n          for (const key in val) {\r\n            const {\r\n              set = val[key], get = val[key]\r\n            } = val[key]\r\n            const accessors = {}\r\n            if (set instanceof Function) {\r\n              accessors.set = set.bind(el, el)\r\n            }\r\n            if (get instanceof Function) {\r\n              accessors.get = get.bind(el, el)\r\n            }\r\n            Object.defineProperty(el, key, accessors)\r\n          }\r\n        } else if (val instanceof Function) {\r\n          el[prop] = val.call(el, el)\r\n        } else {\r\n          copyprop(el, props, prop)\r\n        }\r\n      }\r\n    },\r\n    methods(el, methods) {\r\n      for (const name in methods) Object.defineProperty(el, name, {\r\n        value: methods[name].bind(el, el)\r\n      })\r\n    }\r\n  })\r\n\r\n  d.h = (strs, ...args) => {\r\n    let result = ''\r\n    for (let i = 0; i < args.length; i++) result += strs[i] + args[i]\r\n    result += strs[strs.length - 1]\r\n\r\n    const template = document.createElement('template')\r\n    template.innerHTML = result\r\n    const {\r\n      content\r\n    } = template\r\n\r\n    content.collect = ({\r\n      attr = 'ref',\r\n      keep,\r\n      assign = {}\r\n    } = {}) => {\r\n      Array.from(content.querySelectorAll('[' + attr + ']')).reduce((a, el) => {\r\n        const ref = el.getAttribute(attr).trim()\r\n        if (!keep) el.removeAttribute(attr)\r\n        a[ref] = el\r\n        return a\r\n      }, assign)\r\n      return assign\r\n    }\r\n    content.renderCollect = (...args) => {\r\n      const collection = content.collect()\r\n      d.render(content, ...args)\r\n      return collection\r\n    }\r\n    return content\r\n  }\r\n\r\n  const mutateSet = set => (n, state) =>\r\n    set[state == null ? 'has' : state ? 'add' : 'delete'](n)\r\n\r\n  const Initiated = new Map()\r\n  const beenInitiated = (name, el) => Initiated.has(name) && Initiated.get(name)(el)\r\n\r\n  const attributeObserver = (el, name, opts) => {\r\n    let {init, update, remove} = opts\r\n    if (!init && !update && opts instanceof Function) [init, update] = [opts, opts]\r\n    const intialize = (present, value) => {\r\n      if (present && !beenInitiated(name, el)) {\r\n        if (init) init(el, value)\r\n        if (!Initiated.has(name)) {\r\n          Initiated.set(name, mutateSet(new WeakSet()))\r\n        }\r\n        Initiated.get(name)(el, true)\r\n        return true\r\n      }\r\n      return beenInitiated(name, el)\r\n    }\r\n    let removedBefore = false\r\n    let old = el.getAttribute(name)\r\n    intialize(el.hasAttribute(name), old)\r\n    const stop = d.on.attr(el, ({name: attrName, value, oldvalue, present}) => {\r\n      if (\r\n        attrName === name &&\r\n        old !== value &&\r\n        value !== oldvalue &&\r\n        intialize(present, value)\r\n      ) {\r\n        if (present) {\r\n          if (update) update(el, value, old)\r\n          removedBefore = false\r\n        } else if (!removedBefore) {\r\n          if (remove) remove(el, value, old)\r\n          removedBefore = true\r\n        }\r\n        old = value\r\n      }\r\n    })\r\n\r\n    const manager = () => {\r\n      stop()\r\n      if (Initiated.has(name)) Initiated.get(name)(el, false)\r\n    }\r\n    manager.start = () => {\r\n      stop.on()\r\n      Initiated.get(name)(el, true)\r\n    }\r\n    return (manager.stop = manager)\r\n  }\r\n\r\n  const directives = new Map()\r\n  d.directive = (name, opts) => {\r\n    const directive = new Map()\r\n    directive.init = el => {\r\n      if (!beenInitiated(name, el))\r\n        directive.set(el, attributeObserver(el, name, opts))\r\n    }\r\n    directive.stop = el => {\r\n      if (directive.has(el)) directive.get(el)()\r\n    }\r\n    directives.set(name, directive)\r\n    d.run(() => d.queryEach('[' + name + ']', n => attributeChange(n, name)))\r\n    return directive\r\n  }\r\n\r\n  const attributeChange = (\r\n    el,\r\n    name,\r\n    oldvalue,\r\n    value = el.getAttribute(name),\r\n    present = el.hasAttribute(name)\r\n  ) => {\r\n    if (directives.has(name)) directives.get(name).init(el)\r\n    if (value !== oldvalue) {\r\n      el.dispatchEvent(d.assign(new CustomEvent('attr'), {\r\n        name,\r\n        value,\r\n        oldvalue,\r\n        present\r\n      }))\r\n    }\r\n  }\r\n\r\n  d.createElementPlugins = {}\r\n\r\n  return d\r\n})(\r\n  function d(tag, ops, ...children) {\r\n    const el = tag.constructor === String ? document.createElement(tag) : tag\r\n    const opsisObj = d.isObj(ops)\r\n    if (opsisObj) {\r\n      d.assimilate(el, ops)\r\n      let val\r\n      for (const key in ops) {\r\n        if ((val = ops[key]) == null) continue\r\n\r\n        if (key[0] == 'o' && key[1] == 'n') {\r\n          const isOnce = key[2] == 'c' && key[3] == 'e'\r\n          const i = isOnce ? 4 : 2\r\n          const mode = key.substr(0, i)\r\n          let type = key.substr(i)\r\n          const evtfn = d.EventManager(isOnce)\r\n          if (!ops[mode]) ops[mode] = {}\r\n          if (d.isFunc(val)) {\r\n            ops[mode][type] = evtfn(el, val.name.substr(i), val)\r\n            delete ops[val.name]\r\n          } else {\r\n            const args = d.isArr(val) ? val : [val]\r\n            ops[mode][type] = type.length ? evtfn(el, type, ...args) : evtfn(el, ...args)\r\n          }\r\n        } else if (key in el) {\r\n          if (el[key] instanceof Function) {\r\n            d.isArr(val) ? el[key].apply(el, val) : el[key](val)\r\n          } else {\r\n            el[key] = ops[key]\r\n          }\r\n        } else if (key in d.actualDF) {\r\n          val = d.isArr(val) ? d.actualDF[key](el, ...val) : d.actualDF[key](el, val)\r\n          if (val !== el) ops[key] = val\r\n        } else if (key in d.createElementPlugins) {\r\n          d.createElementPlugins[key](val, el, ops)\r\n        }\r\n      }\r\n\r\n      const host = ops.$ || ops.render || ops.$pre\r\n      if (host) {\r\n        d.attach(host, host == ops.$pre ? 'prepend' : 'appendChild', el)\r\n      }\r\n    }\r\n\r\n    if (el.nodeType !== 3) {\r\n      if (!opsisObj) {\r\n        if (ops instanceof Function) {\r\n          const result = ops.call(el, el)\r\n          ops = result !== el ? result : undefined\r\n        }\r\n        if (d.isRenderable(ops)) children.unshift(ops)\r\n      }\r\n      if (children.length) d.attach(el, 'appendChild', children)\r\n    }\r\n    return el\r\n  }\r\n)","import './global.css'\nimport './site.css'\n\nimport domlib from './domlib.js'\n\nconst d = domlib.domfn\nconst {div, article, textarea, input, a, p, button, hr, h1, h4, section, span, header} = d\n\nconst app = domlib.emitter({})\n\nconst thoughts = `\n  Reality demonstrates itself in a tone of absoluteness. There is no true control, normativity reigns supreme.\n\n\n`\n  .trim()\n  .split(\",,\")\n  .map(t => t.trim())\n  .filter(t => t != '')\n\n\n\nsection.thoughts({$pre: 'main'},\n  header({\n    css: {\n      width: '100%',\n      margin: '0 auto'\n    }\n  }, 'thoughts'),\n  thoughts.map(t => section.thought(t))\n)\n\n\nconsole.log('loaded')"],"names":["d","isArr","Array","isArray","isNil","o","isDef","isFunc","Function","isBool","isObj","constructor","Object","isStr","isNum","isNaN","isInt","isArrlike","Node","length","isNode","isNodeList","arr","NodeList","allare","isPrimitive","isEl","Element","isPromise","then","isRegExp","RegExp","isEmpty","keys","size","isMounted","child","parent","document","from","every","n","compareDocumentPosition","isSvg","SVGElement","isInput","contentEditable","HTMLInputElement","HTMLTextAreaElement","getAttribute","isRenderable","like","isfn","i","compose","fns","reduce","a","b","args","curry","fn","arity","bind","assign","clone","host","empty","create","flatten","result","encaptulate","push","runAsync","window","requestIdleCallback","undefined","setTimeout","run","body","readyState","apply","arguments","addEventListener","e","once","html","input","h","Promise","resolve","String","createRange","createContextualFragment","childNodes","map","Error","frag","inner","createDocumentFragment","query","selector","querySelector","queryAsync","reject","find","queryAll","querySelectorAll","queryEach","each","iterable","key","len","forEach","infinify","reflect","Proxy","get","Reflect","copyprop","obj","defineProperty","getOwnPropertyDescriptor","merge","target","val","includes","able","old","emitter","listeners","Map","emit","event","data","has","on","handler","set","Set","add","manager","off","ls","delete","clear","listen","type","options","wrapper","typeobj","TypeError","mode","name","values","matcher","this","matches","call","ison","removeEventListener","infinifyListen","ln","tgt","opts","EventManager","vpend","children","connector","dfrag","noHostAppend","lastchild","lvl","ishost","ctr","Number","Text","appendChild","prime","nodes","ntype","splice","nextI","next","nexttype","isnl","attach","renderables","nodeHost","render","node","actualDF","domfn","tag","gen","classes","replace","split","el","classList","_","anotherClass","proxy","css","styles","prop","defaultView","getComputedStyle","getPropertyValue","style","setProperty","class","c","state","remove","cl","toggle","hasClass","contains","attr","setAttribute","removeAttribute","attrs","attrToggle","hasAttribute","detail","dispatchEvent","CustomEvent","append","prepend","appendTo","prependTo","refurbish","attributes","after","res","newnode","replaceWith","findOne","txt","str","assimilate","props","methods","accessors","value","strs","template","createElement","innerHTML","content","collect","keep","ref","trim","renderCollect","collection","Initiated","beenInitiated","directives","directive","init","update","intialize","present","WeakSet","removedBefore","stop","attrName","oldvalue","start","attributeObserver","attributeChange","createElementPlugins","ops","opsisObj","isOnce","substr","evtfn","$","$pre","nodeType","unshift","domlib","div","article","textarea","p","button","hr","h1","h4","section","span","header","thoughts","t","filter","width","margin","thought","console","log"],"mappings":"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"}