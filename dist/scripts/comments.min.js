import app from"/js/site.min.js";const d=app.d,df=d.domfn,{div:div,button:button,h4:h4,section:section,span:span,header:header}=df,{toggleBox:toggleBox}=app.components;app.fetchComments=async(t,e={})=>{null==e.path&&(e.path=t+"/"),null==e.page&&(e.page=1);try{const t=await app.jsonPost("/comments",e);return await t.json()}catch(t){return{ok:!1}}},app.makeComment=async(t,e,n=app.gatherComment())=>{if(null==n.public&&(n.public=!0),null==n.author_only&&(n.author_only=!1),null==t||t.length<2)throw new Error("app.makeComment: invalid parent id");if(null==e&&(e=t),e.length<2)throw new Error("app.makeComment: invalid writ id");if(null==n.raw_content||n.raw_content.length<2)throw new Error("app.makeComment: invalid comment content, it's either too long or too short");const o=await app.jsonPut("/comment",{parent_id:t,writ_id:e,public:n.public,raw_content:n.raw_content,author_only:n.author_only});return await o.json()};const commentsDisplay=app.commentsDisplay=section({$:location.pathname.includes("/post/")?".post":app.postDisplay,class:"comments"},(t=>[header(t.heading=h4({id:"comments"},"Comments")),t.commentWriter=div({class:"comment-writer"},t.textarea=df.textarea({placeholder:"write a comment"}),div({class:"comment-controls"},div({class:"togglebox-container"},df.label({attr:{for:"author-only"}},"Author Only"),t.authorOnlyToggle=toggleBox("author-only",{id:"author-only",attr:{title:"check this to make your comment visible only to the post author and no one else"}})),t.cancelBtn=button({class:"cancel-btn",onclick(t){app.cancelCommentWriting()}},"Cancel"),t.postBtn=button({class:"post-btn"},"Post"))),t.list=div({class:"comment-list"})]));app.user||commentsDisplay.heading.setAttribute("title","make an account to comment"),app.gatherComment=()=>{const{textarea:t,authorOnlyToggle:e}=commentsDisplay;return{raw_content:t.value.trim(),author_only:e.input.checked}},app.cancelCommentWriting=()=>{commentsDisplay.textarea.value="",commentsDisplay.authorOnlyToggle.input.checked&&(commentsDisplay.authorOnlyToggle.input.checked=!1),commentsDisplay.postBtn.textContent="Post",commentsDisplay.heading.textContent="Comments",app.editingComment=null,app.replyingToComment=null,app.editingCommentElement&&(app.editingCommentElement.removeAttribute("hidden"),app.editingCommentElement.style.position="",app.editingCommentElement=null)};const commentPostHandler=d.once.click(commentsDisplay.postBtn,(async t=>{try{let t;if(commentsDisplay.classList.contains("edit-mode")){if(app.editingComment.raw_content=commentsDisplay.textarea.value.trim(),app.editingComment.raw_content==app.editingRawContent&&app.editingComment.author_only==commentsDisplay.authorOnlyToggle.input.checked)return app.toast.error("Comment you're editing is unchanged"),void app.cancelCommentWriting();app.editingComment.author_only=commentsDisplay.authorOnlyToggle.input.checked,t=await app.confirmCommentEdit(app.editingComment)}else if(t=await app.makeComment(app.replyingToComment||app.postDisplay&&app.activePostDisplay.id||app.postID,app.postDisplay&&app.activePostDisplay.id||app.postID),!t.ok)throw t.status||"very bad, comment post failed miserably";if(null!=app.replyingToComment){const e=commentsDisplay.list.querySelector(`[id="comment-${app.replyingToComment.replace("-","/")}"]`);e.childenContainer=div({$:e,class:"children"},app.formulateThread(t.data)),setTimeout((()=>{e.childenContainer.focus(),e.scrollIntoView({behavior:"smooth"})}),120);const n=e.querySelector(".btn-rack");null==n.querySelector(".hide-replies-btn")&&button.hide_replies_btn({$:n,onclick(t,n){df.class(e,"hidden-children"),n.textContent=(e.classList.contains("hidden-children")?"show":"hide")+" replies"}},"hide replies")}else{let e;null!=app.editingCommentParent?e=app.formulateThread(t.data,null,app.editingCommentParent):(e=app.formulateThread(t.data),commentsDisplay.list.prepend(e)),null!=app.editingCommentElementChildren&&(d.render(app.editingCommentElementChildren,e),app.editingCommentElementChildren=null)}}catch(t){app.toast.error(`Commenting went wrong: ${t}`),console.error(t)}finally{commentsDisplay.textarea.value="",commentsDisplay.authorOnlyToggle.input.checked&&(commentsDisplay.authorOnlyToggle.input.checked=!1),commentsDisplay.postBtn.textContent="Post",commentsDisplay.heading.textContent="Comments",app.replyingToComment=null,app.editingCommentParent=null,app.editingComment=null,commentsDisplay.classList.remove("edit-mode"),commentPostHandler.on()}}));app.commentDateFormat=t=>"  "+dayjs.unix(t).utcOffset(2).fromNow(),app.deleteComment=async t=>{var e;t=t.replace("-","/");try{await d.queryAsync(`[id="comment-${t}"]`);e.querySelector("span.delete").classList.add("idle-animation")}catch(t){}const n=await(await app.jsonDelete("/comment",t)).json();n.ok&&(app.toast.msg("Comment succesfully deleted"),df.remove(e)),console.log(n)},app.editComment=async(t,e)=>{const n=await d.queryAsync(`[id="comment-${t.replace("-","/")}"]`),o=await(await fetch(`/comment/${t}/raw-content`)).json();if(!o.ok)throw new Error("Could not retrieve comment raw_content");commentsDisplay.textarea.value=o.data,commentsDisplay.postBtn.textContent="Confirm Edit",commentsDisplay.heading.textContent="Comments: Editing",commentsDisplay.textarea.focus(),commentsDisplay.authorOnlyToggle.input.checked=e,commentsDisplay.classList.add("edit-mode"),app.editingRawContent=o.data,app.editingComment={id:t,writ_id:app.activePostDisplay.id,author_only:e},n.parentElement.classList.contains("children")&&(app.editingCommentParent=n.parentElement),n.setAttribute("hidden",""),n.style.position="fixed",app.editingCommentElement=n},app.confirmCommentEdit=async t=>{if(null==t)throw new Error("Cannot edit a non-existent comment");const e=await(await app.jsonPost("/edit-comment",t)).json();if(!e.ok)throw app.toast.error("Failed to edit comment: "+e.status),app.editingCommentElement&&(app.editingCommentElement.removeAttribute("hidden"),app.editingCommentElement.style.position="",app.editingCommentElement=null),new Error("app.confirmCommentEdit: "+e.status||"it didn't work :(");return app.editingCommentElementChildren=app.editingCommentElement.querySelector(".children"),df.remove(app.editingCommentElement),app.editingCommentElement=null,app.toast.msg("Comment successfully edited"),e},location.pathname.includes("/post/")?app.renderComments=async t=>{const e=await app.fetchComments(t);if(!e.ok)return;const n=e.data,o=[];for(const{comment:t,children:e}of n)o.push(app.formulateThread(t,e,commentsDisplay.list));null!=app.user&&null!=app.user.username||app.d.run((()=>{if(df.remove(commentsDisplay.commentWriter),0==o.length){df.remove(commentsDisplay);const t=document.querySelector(".with-comments");t&&t.classList.remove("with-comments")}}))}:app.on.postRendered((async t=>{if(app.activePostDisplay=t,app.postDisplay.classList.toggle("with-comments",t.commentable),!t.commentable)return void df.remove(commentsDisplay);commentsDisplay.list.innerHTML="",d.render(commentsDisplay,app.postDisplay);const e=await app.fetchComments(t.id);if(!e.ok)return;const n=e.data,o=[];for(const{comment:t,children:e}of n)o.push(app.formulateThread(t,e,commentsDisplay.list));null!=app.user&&null!=app.user.username||app.d.run((()=>{if(df.remove(commentsDisplay.commentWriter),0==o.length){df.remove(commentsDisplay);const t=document.querySelector(".with-comments");t&&t.classList.remove("with-comments")}}))}));const randHSLColor=()=>`hsla(${360*Math.random()|0}, ${100*Math.random()|30}%, 50%, .8)`;app.formulateThread=(t,e,n)=>div.comment({$:n,css:{borderLeftColor:`hsla(${360*Math.random()|0}, ${100*Math.random()|30}%, 50%, .8)`},attr:{id:"comment-"+t.id}},(n=>[div({class:"comment-content"},header(app.votesUI("comment",(t.id=t.id.replace("/","-"),t)),span.author_name(t.author_name),span.txt_divider(" - "),span.posted(app.renderUXTimestamp(t.posted,app.commentDateFormat)),null!=t.edited&&[span({class:"line-divider"},"|"),span({class:"edited"},"edited",app.renderUXTimestamp(t.edited,app.commentDateFormat))],span.divider(),null!=app.user&&t.author_name==app.user.username&&[button.edit_btn({onclick(){app.editComment(t.id,t.author_only)}},"edit"),span({class:"delete",attr:{title:"click to delete your comment"},onclick(e){app.deleteComment(t.id)}},app.dismissIcon())]),div({class:"content"},d.html(t.content)),div({class:"btn-rack"},button({class:"reply-btn",onclick(){app.replyingToComment=(""+t.id).replace("-","/"),commentsDisplay.authorOnlyToggle.input.checked=t.author_only,commentsDisplay.postBtn.textContent="Reply",commentsDisplay.heading.textContent="Comments: Write a reply",commentsDisplay.textarea.focus()}},"reply",(t=>{app.user||t.setAttribute("title","make an account to reply")})),null==e||e.length>0&&button({class:"hide-replies-btn",onclick(t,e){df.class(n,"hidden-children"),e.textContent=n.classList.contains("hidden-children")?"show replies":"hide replies"}},"hide replies"))),null==e||e.length>0&&(n.childenContainer=div({class:"children"},e.map((t=>app.formulateThread(t.comment,t.children)))))]));
//# sourceMappingURL=comments.min.js.map